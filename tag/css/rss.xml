<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>浅岛夏风 • Posts by &#34;css&#34; tag</title>
        <link>http://example.com</link>
        <description>一枚微不足道的前端攻城狮</description>
        <language>zh-CN</language>
        <pubDate>Fri, 11 Aug 2017 20:23:45 +0800</pubDate>
        <lastBuildDate>Fri, 11 Aug 2017 20:23:45 +0800</lastBuildDate>
        <category>javascript</category>
        <category>HTTP</category>
        <category>vue</category>
        <category>MySQL</category>
        <category>vuex</category>
        <category>webpack</category>
        <category>axios</category>
        <category>Hbuilder</category>
        <category>AJAX</category>
        <category>CSS</category>
        <category>react</category>
        <category>note</category>
        <category>移动端</category>
        <item>
            <guid isPermalink="true">http://example.com/2017/08/11/%E7%94%A8CSS3%E4%BD%BF%E4%BD%A0%E7%9A%84%E7%BD%91%E9%A1%B5%E5%8A%A8%E8%B5%B7%E6%9D%A5%E2%80%94%E2%80%94transform%E5%B1%9E%E6%80%A7/</guid>
            <title>用CSS3使你的网页动起来——transform属性</title>
            <link>http://example.com/2017/08/11/%E7%94%A8CSS3%E4%BD%BF%E4%BD%A0%E7%9A%84%E7%BD%91%E9%A1%B5%E5%8A%A8%E8%B5%B7%E6%9D%A5%E2%80%94%E2%80%94transform%E5%B1%9E%E6%80%A7/</link>
            <category>CSS</category>
            <pubDate>Fri, 11 Aug 2017 20:23:45 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;strong&gt;转换&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;什么是转换&lt;br&gt;
改变元素在页面上的大小，位置，形状以及角度的一种方式&lt;br&gt;
可以向元素应用 2D 以及 3D 的转换效果&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;转换属性&lt;br&gt;
 (1) 转换效果&lt;br&gt;
属性：transform&lt;br&gt;
 取值：1.none：默认值，即没有任何转换效果&lt;br&gt;
 2. 一个或多个转换函数，如果是多个转换函数，中间用 &amp;quot;空格隔开&amp;quot;&lt;br&gt;
(2) 转换的原点&lt;br&gt;
属性：transform-origin&lt;br&gt;
 取值：&lt;br&gt;
1. 两个值：表示原点在 x 轴和 y 轴的位置&lt;br&gt;
 2. 三个值：表示原点在 x 轴，y 轴和 z 轴的位置&lt;br&gt;
可以取数值 / 百分比 / 关键字&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;2D 转换&lt;/strong&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;位移：改变元素在页面上的位置&lt;br&gt;
属性：transform&lt;br&gt;
 取值：&lt;br&gt;
1.translate (x)：x 取值为正，向右移动；x 取值为负，向左移动&lt;br&gt;
 2.translate (x,y)：x 同上；y 取值为正，下移；y 取值为负，向下移动&lt;br&gt;
 3.translateX (x)&lt;br&gt;
4.translateY(y)&lt;/li&gt;
&lt;/ol&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;缩放&lt;br&gt;
属性：transform&lt;br&gt;
 取值：&lt;br&gt;
1、scale (value)：value 表示的是 x 轴和 y 轴的缩放倍率&lt;br&gt;
 2、scale (x,y)&lt;br&gt;
3、scaleX(x)&lt;br&gt;
4、scaleY(y)&lt;br&gt;
 注：x，y 的取值   默认为 1；放大：大于 1 的数值；缩小：0-1 之间的数字&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;旋转：改变元素在页面上的角度&lt;br&gt;
属性：transform&lt;br&gt;
 取值：rotate (ndeg)&lt;br&gt;
         取值为正，顺时针旋转&lt;br&gt;
         n 取值为负，逆时针旋转&lt;br&gt;
注意： 1、转换原点你会影响旋转效果&lt;br&gt;
           2、旋转操作时，连同坐标轴一同都跟着转&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;倾斜：改变	元素在页面中的形状&lt;br&gt;
属性：transform&lt;br&gt;
 取值：1、skewX (ndeg)	让元素向横向倾斜&lt;br&gt;
                n 取值为正，y 轴逆时针倾斜&lt;br&gt;
                n 取值为负，y 轴顺时针倾斜&lt;br&gt;
          2、skewY (ndeg)	让元素向纵向倾斜&lt;br&gt;
                n 取值为正，x 轴顺时针倾斜&lt;br&gt;
                n 取值为负，x 轴逆时针倾斜&lt;br&gt;
          3、skew (x)&lt;br&gt;
          4、skew(x，y)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;3D 转换&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;属性：perspective&lt;br&gt;
     作用：模拟 人眼睛 到 3D 转换物体的距离，取值越大，表示离物体越远，取值越小，表示离物体越近&lt;br&gt;
     取值：以 px 为单位的数值&lt;br&gt;
     注意：该属性要加在 3D 转换元素的父元素上&lt;/li&gt;
&lt;li&gt;3D 旋转&lt;br&gt;
     属性：transform&lt;br&gt;
     取值：rotateX (xdeg)：以 x 轴为中心轴，旋转元素&lt;br&gt;
               rotateY (ydeg)：以 y 轴为中心轴，旋转元素&lt;br&gt;
               rotateZ (zdeg)：以 z 轴为中心轴，旋转元素&lt;br&gt;
               rotate3D (x,y,z,ndeg)：x,y,z 取值大于 0 的话，则该轴参与旋转；x,y,z 取值为 0 的话，则该轴不参与旋转&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;过渡&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;什么是过渡&lt;br&gt;
使得 CSS 的属性值在一段时间内平缓变化的效果&lt;br&gt;
过渡能观察到元素的属性值得变化过程&lt;/li&gt;
&lt;li&gt;过渡四要素（四属性）&lt;br&gt;
(1) 指定过渡属性&lt;br&gt;
     作用：指定那个 CSS 属性值在变化时需要使用过渡的效果。当指定属性值发生变化时，过渡就会被触发&lt;br&gt;
     语法：transition-property&lt;br&gt;
     取值： 1. 属性名称&lt;br&gt;
                2.none：默认值&lt;br&gt;
                3.all&lt;br&gt;
 允许设置过渡的属性：1、颜色属性&lt;br&gt;
                                  2、取值为数字的属性&lt;br&gt;
                                  3、转换属性 - transform&lt;br&gt;
                                  4、渐变属性&lt;br&gt;
                                  5、visibility&lt;br&gt;
                                  6、阴影属性&lt;br&gt;
 (2) 指定过渡时长：过渡的效果要在多长时间内完成&lt;br&gt;
    属性：transition-duration&lt;br&gt;
    取值：以 s 或 ms 为单位的数值&lt;br&gt;
    默认值为 0，意味着不会有过渡效果&lt;br&gt;
 (3) 指定过渡的速度时间曲线函数&lt;br&gt;
属性：transition-timing-function&lt;br&gt;
 取值：&lt;br&gt;
            1、ease  默认值，慢速开始，快速变快，慢速结束&lt;br&gt;
            2、linear  匀速&lt;br&gt;
            3、ease-in  慢速开始，加速结束&lt;br&gt;
            4、ease-out	快速开始，减速结束&lt;br&gt;
            5、ease-in-out  慢速开始和结束，中间先加后减&lt;br&gt;
 (4) 指定过渡延迟：当用户激发操作后等待多长时间再显示效果&lt;br&gt;
    属性：transition-delay&lt;br&gt;
    取值：以 s 或 ms 为单位的数值&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;动画&lt;/strong&gt;&lt;br&gt;
 1、什么是动画&lt;br&gt;
动画指使元素从一种样式逐渐变化为另一种样式的过程&lt;br&gt;
动画是复杂版的过渡效果&lt;br&gt;
本质：使用 &amp;quot;关键帧&amp;quot;，来定义动画的每一步&lt;br&gt;
          关键帧：包含 运行的时间点以及动作 (样式)&lt;br&gt;
 2、动画的使用步骤&lt;br&gt;
 (1) 声明动画&lt;br&gt;
    指定动画名称以及涉及到的关键帧们&lt;br&gt;
 (2) 为元素调用动画&lt;br&gt;
    指定元素使用哪个动画效果&lt;br&gt;
 3、声明动画&lt;br&gt;
    样式表中，通过 @keyframes 规则来声明动画&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;			@keyframes 动画名称&amp;#123;
					0%&amp;#123;
						/*动画开始时，元素的样式*/
						属性：值;
						属性：值;
					&amp;#125;
					50%&amp;#123;
						/*动画执行到一半时，元素的样式*/
					&amp;#125;
					100%&amp;#123;
						/*动画结束时，元素的样式*/
					&amp;#125;
			&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;动画声明的浏览器兼容性：&lt;br&gt;
    @-moz-keyframes 动画名 {…}&lt;br&gt;
    @-webkit-keyframes 动画名 {…}&lt;br&gt;
    @-o-keyframes 动画名 {…}&lt;br&gt;
 4、调用动画&lt;br&gt;
    (1) animation-name：要调用的动画名称&lt;br&gt;
    (2) animation-duration：动画完成一个周期需要的时长&lt;br&gt;
        取值：以 s 或 ms 为单位的数值&lt;br&gt;
    (3) animation-timing-function：指定动画的速度时间曲线函数&lt;br&gt;
取值：ease、linear、ease-in，ease-out、ease-in-out&lt;br&gt;
    (4) animation-delay：指定动画的播放延迟&lt;br&gt;
    (5) animation-iteration-count：指定动画的播放次数&lt;br&gt;
        取值：1. 默认值为 1，只播放一次&lt;br&gt;
                  2. 自定义数值&lt;br&gt;
                  3.infinite，表示无限次播放&lt;br&gt;
    (6) animation-direction：指定动画的播放方向&lt;br&gt;
        取值： 1、normal：正向播放，从 0%~100%&lt;br&gt;
                  2、reverse：逆向播放，从 100%~0%&lt;br&gt;
                  3、alternate：轮流播放，基数次数播放时，正向播放，偶数次数播放时，逆向播&lt;br&gt;
    (7) animation-flill-mode (不属于简写里)&lt;br&gt;
      作用：动画的填充模式，指动画在播放之前或播放之后的显示效果&lt;br&gt;
      取值：none  默认值，无任何效果&lt;br&gt;
               forwards  当动画播放完成之后，元素将保持在最后一个帧的状态上&lt;br&gt;
                backwards   动画播放前，在延迟时间内，动画将保持在第一帧的状态上&lt;br&gt;
                both   动画播放前后，分别应用在第一帧和最后一帧的状态上&lt;br&gt;
    (8) animation-play-state&lt;br&gt;
      作用：指定动画处于 播放状态 还是 暂停状态&lt;br&gt;
      取值：  paused     动画暂停&lt;br&gt;
                 running    动画播放&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>

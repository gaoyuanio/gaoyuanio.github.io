{
    "version": "https://jsonfeed.org/version/1",
    "title": "浅岛夏风 • All posts by \"webpack\" tag",
    "description": "一枚微不足道的前端攻城狮",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2020/11/18/vue%E9%A1%B9%E7%9B%AE%E6%89%93%E5%8C%85%E4%BC%98%E5%8C%96%E7%AD%96%E7%95%A5/",
            "url": "http://example.com/2020/11/18/vue%E9%A1%B9%E7%9B%AE%E6%89%93%E5%8C%85%E4%BC%98%E5%8C%96%E7%AD%96%E7%95%A5/",
            "title": "vue项目打包优化策略",
            "date_published": "2020-11-18T14:26:13.000Z",
            "content_html": "<p>使用 vue-cli 部署生产包时，发现资源包很大，打包后的 <code>vendor.js</code>  达到了 1.4M，这已经很大了，而且会影响到首屏加载。那么，怎么优化呢？</p>\n<h3 id=\"1组件按需加载\"><a class=\"markdownIt-Anchor\" href=\"#1组件按需加载\">#</a> 1. 组件按需加载</h3>\n<p>这是首先可以优化的点。如果频繁使用了第三方组件 / UI 库，如我的项目中经常同时使用了 element-ui, mint-ui,echarts 等组件库，如果全部引入，项目体积非常大，这时可以按需引入组件。</p>\n<p>示例如下：</p>\n<h4 id=\"11-element-ui\"><a class=\"markdownIt-Anchor\" href=\"#11-element-ui\">#</a> 1.1 element-ui</h4>\n<p>首先，安装 babel-plugin-component：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install babel-plugin-component -D</span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n<p>然后，将.babelrc 修改为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// main.js</span><br><span class=\"line\">import Vue from &#x27;vue&#x27;</span><br><span class=\"line\">import &#123; Dialog, Loading &#125; from &#x27;element-ui&#x27;</span><br><span class=\"line\">Vue.use(Dialog)</span><br><span class=\"line\">Vue.use(Loading.directive)</span><br><span class=\"line\">Vue.prototype.$loading = Loading.service</span><br><span class=\"line\">// 然后正常使用组件</span><br></pre></td></tr></table></figure>\n<h4 id=\"12-mint-ui\"><a class=\"markdownIt-Anchor\" href=\"#12-mint-ui\">#</a> 1.2 mint-ui</h4>\n<p>由于 mint-ui 是 element-ui 的移动端组件，所以它的使用和引入几乎和 element-ui 一样。</p>\n<p>首先，安装 babel-plugin-component：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install babel-plugin-component -D</span><br></pre></td></tr></table></figure>\n<p>然后，将.babelrc 修改为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;presets&quot;: [</span><br><span class=\"line\">    [&quot;es2015&quot;, &#123; &quot;modules&quot;: false &#125;]</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  &quot;plugins&quot;: [[&quot;component&quot;, [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      &quot;libraryName&quot;: &quot;mint-ui&quot;,</span><br><span class=\"line\">      &quot;style&quot;: true</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]]]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后引入部分组件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// main.js</span><br><span class=\"line\">import Vue from &#x27;vue&#x27;</span><br><span class=\"line\">import &#123; Toast, MessageBox &#125; from &#x27;element-ui&#x27;</span><br><span class=\"line\">Vue.use(Dialog)</span><br><span class=\"line\">Vue.use(Loading.directive)</span><br><span class=\"line\">Vue.prototype.$loading = Loading.service</span><br><span class=\"line\">// 然后正常使用组件</span><br></pre></td></tr></table></figure>\n<p>注意，element-ui 和 mint-ui 不能同时在.babelrc 中进行插件设置，这种情况下，依然可以按需引入，但是不要在 <code>.babelrc</code>  中配置，在引入的地方同时引入 css 即可。</p>\n<h4 id=\"13-echarts\"><a class=\"markdownIt-Anchor\" href=\"#13-echarts\">#</a> 1.3 echarts</h4>\n<p>首先安装 babel-plugin-equire</p>\n<p>npm i babel-plugin-equire -D</p>\n<p>然后，在 <code>.babelrc</code>  文件中添加该插件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;plugins&quot;: [</span><br><span class=\"line\">       // other plugins</span><br><span class=\"line\">       ...</span><br><span class=\"line\">       </span><br><span class=\"line\">    &quot;equire&quot;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>创建一个 js 文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// echarts.js</span><br><span class=\"line\">// eslint-disable-next-line</span><br><span class=\"line\">const echarts = equire([</span><br><span class=\"line\">  &#x27;tooltip&#x27;,</span><br><span class=\"line\">  &#x27;candlestick&#x27;,</span><br><span class=\"line\">  &#x27;bar&#x27;,</span><br><span class=\"line\">  &#x27;line&#x27;,</span><br><span class=\"line\">  &#x27;axisPointer&#x27;,</span><br><span class=\"line\">  &#x27;legend&#x27;,</span><br><span class=\"line\">  &#x27;grid&#x27;</span><br><span class=\"line\">])</span><br><span class=\"line\">export default echarts</span><br><span class=\"line\">// 业务组件，引入echarts</span><br><span class=\"line\">import echarts from &#x27;@/assets/lib/echarts&#x27;</span><br><span class=\"line\">// 使用与以前一样</span><br></pre></td></tr></table></figure>\n<p>按需加载 echarts</p>\n<p>解决 vue-cli 首屏加载慢的问题</p>\n<h3 id=\"2路由懒加载\"><a class=\"markdownIt-Anchor\" href=\"#2路由懒加载\">#</a> 2. 路由懒加载</h3>\n<p>这里需要一个插件</p>\n<p>vue-router 官方推荐 syntax-dynamic-import 插件，不过它要求同时安装 @bable/core^7.0.0，如果你安装了 babel-core6，是会有版本冲突的。我的做法如下</p>\n<p>npm install babel-plugin-syntax-dynamic-import --save-dev(^6.18.0)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// router.js</span><br><span class=\"line\">const login = () =&gt; import(&#x27;@/components/login&#x27;)</span><br><span class=\"line\">const router = new VueRouter(&#123;</span><br><span class=\"line\">  routes: [</span><br><span class=\"line\">    &#123; path: &#x27;/login&#x27;, component: login &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>还有一种魔法注释用法</p>\n<p>有时候我们想把某个路由下的所有组件都打包在同个异步块 (chunk) 中。只需要使用 命名 chunk，一个特殊的注释语法来提供 chunk name (需要 Webpack &gt; 2.4)。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const Foo = () =&gt; import(/* webpackChunkName: &quot;group-foo&quot; */ &#x27;./Foo.vue&#x27;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"3异步组件\"><a class=\"markdownIt-Anchor\" href=\"#3异步组件\">#</a> 3. 异步组件</h3>\n<p>如果组件在页面加载时不需要，只在调用时用到，这时可以使用异步组件的写法。仅仅是引入和组件注册写法不同</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// template</span><br><span class=\"line\">&lt;test v-if=&quot;showTest&quot;&gt;&lt;/test&gt;</span><br><span class=\"line\">// script</span><br><span class=\"line\">  components: &#123;</span><br><span class=\"line\">    test: () =&gt; import(&#x27;./test&#x27;) // 将组件异步引入，告诉webpack，将该部分代码分割打包</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods:&#123;</span><br><span class=\"line\">      clickTest () &#123;</span><br><span class=\"line\">          this.showTest = !this.showTest</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4图片的压缩合并\"><a class=\"markdownIt-Anchor\" href=\"#4图片的压缩合并\">#</a> 4. 图片的压缩合并</h3>\n<p>如有可能，将图片制作成精灵图</p>\n<h3 id=\"5cdn加速\"><a class=\"markdownIt-Anchor\" href=\"#5cdn加速\">#</a> 5.CDN 加速</h3>\n<p>在 index.html 中引入 cdn 资源</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">  &lt;div id=&quot;app&quot;&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">  &lt;!-- built files will be auto injected --&gt;</span><br><span class=\"line\">  &lt;script src=&quot;https://cdn.bootcss.com/vue/2.5.2/vue.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">  &lt;script src=&quot;https://cdn.bootcss.com/vue-router/3.0.1/vue-router.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">  &lt;script src=&quot;https://cdn.bootcss.com/vuex/3.0.1/vuex.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">  &lt;script src=&quot;https://cdn.bootcss.com/vue-resource/1.5.1/vue-resource.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p>修改 build/webpack.base.conf.js</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">  context: path.resolve(__dirname, &#x27;../&#x27;),</span><br><span class=\"line\">  entry: &#123;</span><br><span class=\"line\">    app: &#x27;./src/main.js&#x27;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  externals:&#123;</span><br><span class=\"line\">    &#x27;vue&#x27;: &#x27;Vue&#x27;,</span><br><span class=\"line\">    &#x27;vue-router&#x27;: &#x27;VueRouter&#x27;,</span><br><span class=\"line\">    &#x27;vuex&#x27;:&#x27;Vuex&#x27;,</span><br><span class=\"line\">    &#x27;vue-resource&#x27;: &#x27;VueResource&#x27;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>修改 src/main.js src/router/index.js 注释掉 import 引入的 vue,vue-resource</p>\n<p>// import Vue from ‘vue’</p>\n<p>// import VueResource from ‘vue-resource’</p>\n<p>// Vue.use(VueResource)</p>\n<h3 id=\"6压缩代码\"><a class=\"markdownIt-Anchor\" href=\"#6压缩代码\">#</a> 6. 压缩代码</h3>\n<p>vue-cli 已经使用 UglifyJsPlugin 插件来压缩代码，可以设置成如下配置：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">new webpack.optimize.UglifyJsPlugin(&#123;</span><br><span class=\"line\">  compress: &#123;</span><br><span class=\"line\">    warnings: false,</span><br><span class=\"line\">    drop_console: true,</span><br><span class=\"line\">    pure_funcs: [&#x27;console.log&#x27;]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  sourceMap: false</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>其中 sourceMap: false 是禁用除错功能。</p>\n<p>如果设为 true，在部署包中会生成.map 结尾的 js 文件。它用于在代码混淆压缩的情况下仍可进行调试。这个功能虽好，但会大大增加整体资源包的体积，所以将其禁用。</p>\n",
            "tags": [
                "vue",
                "webpack"
            ]
        }
    ]
}
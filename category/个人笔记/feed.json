{
    "version": "https://jsonfeed.org/version/1",
    "title": "浅岛夏风 • All posts by \"个人笔记\" category",
    "description": "一枚微不足道的前端攻城狮",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2020/05/01/%E5%BC%80%E5%8F%91%E5%B0%8F%E6%8A%80%E5%B7%A7/",
            "url": "http://example.com/2020/05/01/%E5%BC%80%E5%8F%91%E5%B0%8F%E6%8A%80%E5%B7%A7/",
            "title": "开发小技巧",
            "date_published": "2020-05-01T13:55:23.000Z",
            "content_html": "<h2 id=\"阻止单击事件冒泡\"><a class=\"markdownIt-Anchor\" href=\"#阻止单击事件冒泡\">#</a> 阻止单击事件冒泡</h2>\n<p><code>&lt;a v-on:click.stop=&quot;doThis&quot;&gt;&lt;/a&gt;</code></p>\n<h2 id=\"提交事件不再重载页面\"><a class=\"markdownIt-Anchor\" href=\"#提交事件不再重载页面\">#</a> 提交事件不再重载页面</h2>\n<p><code>&lt;form v-on:submit.prevent=&quot;onSubmit&quot;&gt;&lt;/form&gt;</code></p>\n<h2 id=\"修饰符可以串联\"><a class=\"markdownIt-Anchor\" href=\"#修饰符可以串联\">#</a> 修饰符可以串联</h2>\n<p><code>&lt;a v-on:click.stop.prevent=&quot;doThat&quot;&gt;</code></p>\n<span id=\"more\"></span>\n<h2 id=\"只有修饰符\"><a class=\"markdownIt-Anchor\" href=\"#只有修饰符\">#</a> 只有修饰符</h2>\n<p><code>&lt;form v-on:submit.prevent&gt;&lt;/form&gt;</code></p>\n<br>\n<br>\n<br>\n<h2 id=\"mac谷歌跨域命令\"><a class=\"markdownIt-Anchor\" href=\"#mac谷歌跨域命令\">#</a> Mac 谷歌跨域命令</h2>\n<p><code>open -n /Applications/Google\\ Chrome.app/ --args --disable-web-security  --user-data-dir=/Users/GaoYuan/Documents/MyChromeDevUserData</code></p>\n<br>\n<br>\n<br>\n<h2 id=\"mac显示隐藏文件命令\"><a class=\"markdownIt-Anchor\" href=\"#mac显示隐藏文件命令\">#</a> Mac 显示隐藏文件命令：</h2>\n<p><strong>显示隐藏文件</strong></p>\n<p><code>defaults write com.apple.finder AppleShowAllFiles Yes &amp;&amp; killall Finder </code></p>\n<p><strong>不显示隐藏文件</strong></p>\n<p><code>defaults write com.apple.finder AppleShowAllFiles No &amp;&amp; killall Finder </code></p>\n<br>\n<br>\n<h2 id=\"jison解决js处理后端返回的long型数据精度丢失问题\"><a class=\"markdownIt-Anchor\" href=\"#jison解决js处理后端返回的long型数据精度丢失问题\">#</a> Jison 解决 JS 处理后端返回的 Long 型数据精度丢失问题</h2>\n<p>原因：js 是弱类型语言，所有的数字类型统称为 Number 类型，不区分 int、long、double 等。</p>\n<p><code>git clone git://github.com/zaach/jsonlint.git</code></p>\n<p>在 src 目录下提供了 jsonlint.y（grammaFile）和 jsonlint.l（lexFile) 两个文件。使用这两个文件可以直接生成 jsonlint.js。如下修改 jsonlint.y：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">JSONNumber</span><br><span class=\"line\"></span><br><span class=\"line\">    : NUMBER</span><br><span class=\"line\">    </span><br><span class=\"line\">        &#123;$$ = yytext == String(Number(yytext))? Number(yytext): yytext;&#125;</span><br><span class=\"line\">    ;</span><br></pre></td></tr></table></figure>\n<p>然后：</p>\n<p><code>cd src</code></p>\n<p><code>jison jsonlint.y jsonlint.l</code></p>\n<h3 id=\"最后引入至项目\"><a class=\"markdownIt-Anchor\" href=\"#最后引入至项目\">#</a> 最后引入至项目</h3>\n<p>1. 将自定义的 jsonlint.js 放到 static 目录下<br>\n 2. 在 index.html 中引入<br>\n <code>&lt;script src=&quot;./static/jsonlint/jsonlint.js&quot;&gt;&lt;/script&gt;</code></p>\n<p>3、在我们请求的返回数据中，做一层拦截转换，此处以 axios 的实现方法为例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/*transformResponse 选项允许我们在数据传送到 `then/catch` 方法之前对数据进行改动*/</span><br><span class=\"line\">axios.defaults.transformResponse = [</span><br><span class=\"line\">  function(data) &#123;</span><br><span class=\"line\">    return jsonlint.parse(data)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>综上，定义 JSON 转化避免 long 类型数据溢出，可以实现 long 类型数据在前端正常显示</p>\n<h2 id=\"mac给文件夹赋予管理员权限\"><a class=\"markdownIt-Anchor\" href=\"#mac给文件夹赋予管理员权限\">#</a> Mac 给文件夹赋予管理员权限</h2>\n<p><code>sudo chown -R gaoyuan ios</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if ($request_filename ~* .*index\\.html$) &#123;</span><br><span class=\"line\">     add_header Cache-Control &quot;private, no-store, no-cache, must-revalidate, proxy-revalidate&quot;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "note"
            ]
        }
    ]
}
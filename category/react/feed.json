{
    "version": "https://jsonfeed.org/version/1",
    "title": "浅岛夏风 • All posts by \"react\" category",
    "description": "一枚微不足道的前端攻城狮",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2021/04/13/%E5%AE%9E%E7%8E%B0%E6%BB%9A%E5%8A%A8%E5%8A%A8%E7%94%BB%E2%80%94%E6%B8%90%E5%85%A5%E5%8A%A8%E7%94%BB/",
            "url": "http://example.com/2021/04/13/%E5%AE%9E%E7%8E%B0%E6%BB%9A%E5%8A%A8%E5%8A%A8%E7%94%BB%E2%80%94%E6%B8%90%E5%85%A5%E5%8A%A8%E7%94%BB/",
            "title": "实现滚动动画—渐入动画",
            "date_published": "2021-04-13T14:00:20.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>Vue 和 React 版本其实区别不大，，，主要使用原生 js 就能实现，性能上就没考虑太多（可以在完成需求后，移除进入视区后的元素的类名，如：slide-item，lazy-img 等）</p>\n<h2 id=\"一-滚动动画vue-版本\"><a class=\"markdownIt-Anchor\" href=\"#一-滚动动画vue-版本\">#</a> 一、滚动动画：Vue 版本</h2>\n<h3 id=\"给-html-元素添加-class\"><a class=\"markdownIt-Anchor\" href=\"#给-html-元素添加-class\">#</a> 给 HTML 元素添加 class</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div class=&quot;slide-item&quot;&gt;需要根据滚动条位置显示的元素&lt;/div&gt;</span><br><span class=\"line\">&lt;div class=&quot;slide-item slide-delay&quot; data-delay=&quot;200&quot;&gt;有延迟的元素&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n<h3 id=\"css-和动画\"><a class=\"markdownIt-Anchor\" href=\"#css-和动画\">#</a> css 和动画</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.slide-item &#123; opacity: 0; &#125;</span><br><span class=\"line\">.slide-up,</span><br><span class=\"line\">.slide-up-200,</span><br><span class=\"line\">.slide-up-400,</span><br><span class=\"line\">.slide-up-600,</span><br><span class=\"line\">.slide-up-800 &#123;</span><br><span class=\"line\">    animation: slide-up .5s forwards;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.slide-up-200 &#123; animation-delay: .2s; &#125;</span><br><span class=\"line\">.slide-up-400 &#123; animation-delay: .4s;&#125;</span><br><span class=\"line\">.slide-up-600 &#123; animation-delay: .6s;&#125;</span><br><span class=\"line\">.slide-up-800 &#123; animation-delay: .8s; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@keyframes slide-up &#123;</span><br><span class=\"line\">    from &#123; opacity: 0; transform: translateY(50%); &#125;</span><br><span class=\"line\">    to &#123; opacity: 1; transform: translateY(0); &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"监听滚动\"><a class=\"markdownIt-Anchor\" href=\"#监听滚动\">#</a> 监听滚动</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mounted() &#123;</span><br><span class=\"line\">  window.addEventListener(&quot;scroll&quot;, this.onScroll);</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">beforeDestroy() &#123;</span><br><span class=\"line\">  window.removeEventListener(&quot;scroll&quot;, this.onScroll);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<h3 id=\"滚动方法\"><a class=\"markdownIt-Anchor\" href=\"#滚动方法\">#</a> 滚动方法</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 监听滚动</span><br><span class=\"line\">onScroll() &#123;</span><br><span class=\"line\">  const slideItems = document.querySelectorAll(&#x27;.slide-item&#x27;);</span><br><span class=\"line\">  // 上滑</span><br><span class=\"line\">  slideItems.forEach(item =&gt; &#123;</span><br><span class=\"line\">    let itemBCR = item.getBoundingClientRect();</span><br><span class=\"line\">    // 进入视区或在视区之上</span><br><span class=\"line\">    if (itemBCR.top &lt;= window.innerHeight + 10) &#123;</span><br><span class=\"line\">      if (Array.from(item.classList).includes(&#x27;slide-delay&#x27;)) &#123;</span><br><span class=\"line\">        item.classList.add(`slide-up-$&#123;item.dataset.delay&#125;`);</span><br><span class=\"line\">      &#125; else &#123;</span><br><span class=\"line\">        item.classList.add(&#x27;slide-up&#x27;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      // 可以在这里 remove 掉 slide-item 这个类名，优化性能</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">      // 这里主要用来多次显示效果的，上面 remove 掉 slide-item 后将不再起作用</span><br><span class=\"line\">      if (Array.from(item.classList).includes(&#x27;slide-delay&#x27;)) &#123;</span><br><span class=\"line\">        item.classList.remove(`slide-up-$&#123;item.dataset.delay&#125;`);</span><br><span class=\"line\">      &#125; else &#123;</span><br><span class=\"line\">        item.classList.remove(&#x27;slide-up&#x27;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<h2 id=\"二-滚动动画react-版本\"><a class=\"markdownIt-Anchor\" href=\"#二-滚动动画react-版本\">#</a> 二、滚动动画：React 版本</h2>\n<p>主要使用 hooks</p>\n<h3 id=\"给-html-元素添加-class-2\"><a class=\"markdownIt-Anchor\" href=\"#给-html-元素添加-class-2\">#</a> 给 HTML 元素添加 class</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;span className=&#123;`slide-item`&#125;&gt;需要根据滚动条位置显示的元素&lt;/span&gt;</span><br><span class=\"line\">&lt;span className=&#123;`slide-item slide-delay`&#125; data-delay=&quot;200&quot;&gt;有延迟的元素&lt;/span&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"css-和动画-2\"><a class=\"markdownIt-Anchor\" href=\"#css-和动画-2\">#</a> css 和动画</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.slide-item &#123; opacity: 0; &#125;</span><br><span class=\"line\">.slide-up,</span><br><span class=\"line\">.slide-up-200,</span><br><span class=\"line\">.slide-up-400,</span><br><span class=\"line\">.slide-up-600,</span><br><span class=\"line\">.slide-up-800 &#123;</span><br><span class=\"line\">    animation: slide-up .5s forwards;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.slide-up-200 &#123; animation-delay: .2s; &#125;</span><br><span class=\"line\">.slide-up-400 &#123; animation-delay: .4s;&#125;</span><br><span class=\"line\">.slide-up-600 &#123; animation-delay: .6s;&#125;</span><br><span class=\"line\">.slide-up-800 &#123; animation-delay: .8s; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@keyframes slide-up &#123;</span><br><span class=\"line\">    from &#123; opacity: 0; transform: translateY(50%); &#125;</span><br><span class=\"line\">    to &#123; opacity: 1; transform: translateY(0); &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"监听滚动-2\"><a class=\"markdownIt-Anchor\" href=\"#监听滚动-2\">#</a> 监听滚动</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">useEffect(() =&gt; &#123;</span><br><span class=\"line\">  onScroll();</span><br><span class=\"line\">  window.addEventListener(&#x27;scroll&#x27;, onScroll);</span><br><span class=\"line\"></span><br><span class=\"line\">  return () =&gt; &#123;</span><br><span class=\"line\">    window.removeEventListener(&#x27;scroll&#x27;, onScroll);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;, []);</span><br></pre></td></tr></table></figure>\n<h3 id=\"滚动方法-2\"><a class=\"markdownIt-Anchor\" href=\"#滚动方法-2\">#</a> 滚动方法</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 监听滚动</span><br><span class=\"line\">function onScroll(): void &#123;</span><br><span class=\"line\">  const slideItems = document.querySelectorAll(&#x27;.slide-item&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">  slideItems.forEach((item: any) =&gt; &#123;</span><br><span class=\"line\">    let slideBCR = item.getBoundingClientRect();</span><br><span class=\"line\">    // 进入视区或在视区之上</span><br><span class=\"line\">    if (slideBCR.top &lt;= window.innerHeight + 10) &#123;</span><br><span class=\"line\">      if (Array.from(item.classList).includes(&#x27;slide-delay&#x27;)) &#123; // 延迟</span><br><span class=\"line\">        item.classList.add(`slide-up-$&#123;item.dataset.delay&#125;`);</span><br><span class=\"line\">      &#125; else &#123;</span><br><span class=\"line\">        item.classList.add(&#x27;slide-up&#x27;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      // 可以在这里 remove 掉 slide-item 这个类名，优化性能</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">      // 这里主要用来多次显示效果的，上面 remove 掉 slide-item 后将不再起作用</span><br><span class=\"line\">      if (Array.from(item.classList).includes(&#x27;slide-delay&#x27;)) &#123; // 延迟</span><br><span class=\"line\">        item.classList.remove(`slide-up-$&#123;item.dataset.delay&#125;`);</span><br><span class=\"line\">      &#125; else &#123;</span><br><span class=\"line\">        item.classList.remove(&#x27;slide-up&#x27;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "vue",
                "react"
            ]
        }
    ]
}